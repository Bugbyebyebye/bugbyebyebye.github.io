{"title":"通过IDEA使用Docker快速部署Springboot项目","uid":"08fe6dcb3b19efde37838e9e91d28139","slug":"通过IDEA使用Docker快速部署Springboot项目","date":"2024-04-01T10:59:00.000Z","updated":"2024-04-01T14:06:28.860Z","comments":true,"path":"api/articles/通过IDEA使用Docker快速部署Springboot项目.json","keywords":null,"cover":[],"content":"<h2 id=\"如何在IDEA远程连接Docker\"><a href=\"#如何在IDEA远程连接Docker\" class=\"headerlink\" title=\"如何在IDEA远程连接Docker\"></a>如何在IDEA远程连接Docker</h2><p>&nbsp;&nbsp;Idea作为一个强大的代码开发工具，提供了便捷的docker服务，如果是社区版你可能需要下载名为docker的插件。如果是专业版则可以直接配置。<br>&nbsp;&nbsp;但是为了在idea实现远程连接服务器的docker，你需要按照如图的配置：<br><img src=\"https://cdn.emotionalbug.top/myBlog/%E9%80%9A%E8%BF%87IDEA%E4%BD%BF%E7%94%A8Docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2Springboot%E9%A1%B9%E7%9B%AE/image.png\" alt=\"alt text\"><br>&nbsp;&nbsp;然后，选择新建服务器。重点来了，如果你去百度文章，很多教程都会让你去服务器上修改docker配置文件，允许0.0.0.0远程连接到docker，并且开放服务器安全组的2375端口。如果你这么做了，恭喜你，相信不久之后，你就会发现经常冒出莫名其妙的镜像，你的服务器被木马用来挖矿了。写这些教程的人真是心大。其实我们完全可以通过ssh的方式去连接，不需要改写配置文件，也不用暴露端口，安全性大大的提高。<br>如图：<br><img src=\"https://cdn.emotionalbug.top/myBlog/%E9%80%9A%E8%BF%87IDEA%E4%BD%BF%E7%94%A8Docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2Springboot%E9%A1%B9%E7%9B%AE/image-1.png\" alt=\"alt text\"><br>测试连接成功之后，我们就迈出了部署项目的第一步。</p>\n<h2 id=\"在Windows安装Docker\"><a href=\"#在Windows安装Docker\" class=\"headerlink\" title=\"在Windows安装Docker\"></a>在Windows安装Docker</h2><p>&nbsp;&nbsp;传统的使用docker部署项目的方式，就是将项目文件全部拷贝到服务器上，在服务器上的终端中利用docker打包镜像，运行容器。费时费力，每一次程序有修改就要进行一遍这些操作，实在是繁琐。如果我告诉你可以在本地实现一键打包上传部署呢？<br>&nbsp;&nbsp;我们需要安装docker，到docker官网<a href=\"https://www.docker.com/products/docker-desktop/%E5%AE%89%E8%A3%85docker\">https://www.docker.com/products/docker-desktop/安装docker</a> windows desktop版本。安装好之后，我们需要对idea进行一个配置，如下图：<br><img src=\"https://cdn.emotionalbug.top/myBlog/%E9%80%9A%E8%BF%87IDEA%E4%BD%BF%E7%94%A8Docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2Springboot%E9%A1%B9%E7%9B%AE/image-2.png\" alt=\"alt text\"><br>点击右侧的三个点去找到你安装docker的文件夹，默认安装的应该和我的一样。这样就可以在本地进行镜像的打包和部署了，镜像打包完成之后，会自动上传到服务器上，运行容器。</p>\n<h2 id=\"为Springboot项目配置docker\"><a href=\"#为Springboot项目配置docker\" class=\"headerlink\" title=\"为Springboot项目配置docker\"></a>为Springboot项目配置docker</h2><h3 id=\"编写dockerfile文件\"><a href=\"#编写dockerfile文件\" class=\"headerlink\" title=\"编写dockerfile文件\"></a>编写dockerfile文件</h3><p>&nbsp;&nbsp;springboot项目打包完成后会生成一个jar包，这个jar包默认放在target下。我们需要为这个项目打包一个镜像，首先选择基础镜像，可以用更完善的ubuntu、centos等，或者直接像我这样使用简单的只包含Java jdk环境的基础镜像，然后将jar包拷贝进去，再进行一些基础配置：<br><img src=\"https://cdn.emotionalbug.top/myBlog/%E9%80%9A%E8%BF%87IDEA%E4%BD%BF%E7%94%A8Docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2Springboot%E9%A1%B9%E7%9B%AE/image-3.png\" alt=\"alt text\"></p>\n<figure class=\"highlight docker\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> adoptopenjdk/openjdk8 <span class=\"comment\">#使用基础镜像</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> target/pets-server-1.0.0.jar app.jar <span class=\"comment\">#将jar包拷贝放进镜像中</span></span></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;java&quot;</span>, <span class=\"string\">&quot;-jar&quot;</span>, <span class=\"string\">&quot;app.jar&quot;</span>] <span class=\"comment\"># 配置容器启动后的运行指令</span></span></span><br></pre></td></tr></table></figure>\n<p>&nbsp;&nbsp;其实，如果你已经有了现成的mysql等数据库，只需要点击部署上传Java项目的镜像即可。但是相信很多开发经验比较丰富的小伙伴都知道，自己配置mysql的服务实在是太繁琐了，尤其是还要修改配置文件，配置远程连接等。于是，我们可以使用docker compose 来连带打包一个mysql镜像，为springboot项目提供数据库服务。</p>\n<h3 id=\"编写docker-compose文件\"><a href=\"#编写docker-compose文件\" class=\"headerlink\" title=\"编写docker compose文件\"></a>编写docker compose文件</h3><p>&nbsp;&nbsp;这里我简单给出docker-compose.yml文件的配置，至于为什么要这么配置还需要小伙伴自行学习docker的相关知识。</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">version:</span> <span class=\"string\">&quot;3.9&quot;</span></span><br><span class=\"line\"><span class=\"attr\">services:</span></span><br><span class=\"line\">  <span class=\"attr\">spring:</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">pets</span> <span class=\"comment\">#容器名称</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">pets-server:1.0</span> <span class=\"comment\">#配置先前创建的镜像</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;8080:8080&quot;</span> <span class=\"comment\">#端口映射，保证外界能够访问到web服务</span></span><br><span class=\"line\">    <span class=\"attr\">depends_on:</span> <span class=\"comment\">#声明本服务的外界服务依赖</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">mysql</span> </span><br><span class=\"line\">    <span class=\"attr\">restart:</span> <span class=\"string\">always</span> <span class=\"comment\">#如果MySQL连接不上，不断重启</span></span><br><span class=\"line\"></span><br><span class=\"line\">  <span class=\"attr\">mysql:</span></span><br><span class=\"line\">    <span class=\"attr\">container_name:</span> <span class=\"string\">mysql-server</span></span><br><span class=\"line\">    <span class=\"attr\">image:</span> <span class=\"string\">mysql:8.0</span></span><br><span class=\"line\">    <span class=\"attr\">command:</span> <span class=\"comment\"># 简单配置 MySQL的密码模式、允许远程连接</span></span><br><span class=\"line\">      <span class=\"string\">--default-authentication-plugin=mysql_native_password</span></span><br><span class=\"line\">      <span class=\"string\">--bind-address=0.0.0.0</span></span><br><span class=\"line\">    <span class=\"attr\">environment:</span> <span class=\"comment\">#使用环境变量：声明用户名密码等</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_ROOT_HOST:</span> <span class=\"string\">&#x27;%&#x27;</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_ROOT_PASSWORD:</span> <span class=\"string\">&#x27;password&#x27;</span></span><br><span class=\"line\">      <span class=\"attr\">MYSQL_DATABASE:</span> <span class=\"string\">&#x27;pets&#x27;</span> <span class=\"comment\"># 声明创建需要的数据库</span></span><br><span class=\"line\">      <span class=\"attr\">TZ:</span> <span class=\"string\">&#x27;Asia/Shanghai&#x27;</span></span><br><span class=\"line\">    <span class=\"attr\">ports:</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">&quot;3306:3306&quot;</span> <span class=\"comment\">#端口映射</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"attr\">volumes:</span> <span class=\"comment\"># 数据持久化</span></span><br><span class=\"line\">      <span class=\"bullet\">-</span> <span class=\"string\">db-data:/var/lib/mysql</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"attr\">volumes:</span> <span class=\"comment\">#声明持久化数据卷</span></span><br><span class=\"line\">  <span class=\"attr\">db-data:</span></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"部署项目\"><a href=\"#部署项目\" class=\"headerlink\" title=\"部署项目\"></a>部署项目</h3><p>&nbsp;&nbsp;在编写好docker配置文件之后，我们终于可以打包镜像，部署项目了。</p>\n<ul>\n<li>1.运行dockerfile打包上传Java项目镜像<br><img src=\"https://cdn.emotionalbug.top/myBlog/%E9%80%9A%E8%BF%87IDEA%E4%BD%BF%E7%94%A8Docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2Springboot%E9%A1%B9%E7%9B%AE/image-4.png\" alt=\"alt text\"></li>\n<li>2.运行docker-compose打包部署MySQL镜像，并且声明实现所有配置。<br><img src=\"https://cdn.emotionalbug.top/myBlog/%E9%80%9A%E8%BF%87IDEA%E4%BD%BF%E7%94%A8Docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2Springboot%E9%A1%B9%E7%9B%AE/image-5.png\" alt=\"alt text\"><br>结果展示：<br><img src=\"https://cdn.emotionalbug.top/myBlog/%E9%80%9A%E8%BF%87IDEA%E4%BD%BF%E7%94%A8Docker%E5%BF%AB%E9%80%9F%E9%83%A8%E7%BD%B2Springboot%E9%A1%B9%E7%9B%AE/image-6.png\" alt=\"alt text\"><br>&nbsp;&nbsp;项目成功部署！相信小伙伴们也发现了，idea的这个插件提供了可视化界面，可以实时查看docker运行的控制台输出，检测后端运行状况变得很轻松，不需要下载额外的管理镜像，实在是方便的很呐，那么这篇博客到这里就结束啦。</li>\n</ul>\n","feature":true,"text":"这篇文章简单总结了如何在Windows使用IDEA，远程连接服务器的Docker，快捷的部署Spring boot项目（一些踩坑总结）...","permalink":"/post/通过IDEA使用Docker快速部署Springboot项目","photos":[],"count_time":{"symbolsCount":"2.3k","symbolsTime":"2 mins."},"categories":[{"name":"运维","slug":"运维","count":1,"path":"api/categories/运维.json"}],"tags":[{"name":"Docker","slug":"Docker","count":1,"path":"api/tags/Docker.json"},{"name":"Springboot","slug":"Springboot","count":1,"path":"api/tags/Springboot.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%A6%82%E4%BD%95%E5%9C%A8IDEA%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5Docker\"><span class=\"toc-text\">如何在IDEA远程连接Docker</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8Windows%E5%AE%89%E8%A3%85Docker\"><span class=\"toc-text\">在Windows安装Docker</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E4%B8%BASpringboot%E9%A1%B9%E7%9B%AE%E9%85%8D%E7%BD%AEdocker\"><span class=\"toc-text\">为Springboot项目配置docker</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99dockerfile%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">编写dockerfile文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E7%BC%96%E5%86%99docker-compose%E6%96%87%E4%BB%B6\"><span class=\"toc-text\">编写docker compose文件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%83%A8%E7%BD%B2%E9%A1%B9%E7%9B%AE\"><span class=\"toc-text\">部署项目</span></a></li></ol></li></ol>","author":{"name":"Bugbyebyebye","slug":"blog-author","avatar":"https://cdn.emotionalbug.top/source/kyrie.png","link":"/","description":"计算机大学牲的个人博客","socials":{"github":"https://github.com/Bugbyebyebye","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/la-ta-san-ren-39","csdn":"","juejin":"https://juejin.cn/user/2247837136721502","customs":{}}},"mapped":true,"hidden":false,"prev_post":{},"next_post":{"title":"写在开始","uid":"ded7c81b71f424179f608cc88c877ea6","slug":"写在开始","date":"2024-03-27T05:11:15.000Z","updated":"2024-03-27T05:30:44.057Z","comments":true,"path":"api/articles/写在开始.json","keywords":null,"cover":"https://cdn.emotionalbug.top/source/kyrie.png","text":"这篇文章记录了我的个人博客的建立...","permalink":"/post/写在开始","photos":[],"count_time":{"symbolsCount":836,"symbolsTime":"1 mins."},"categories":[{"name":"个人记录","slug":"个人记录","count":1,"path":"api/categories/个人记录.json"}],"tags":[{"name":"心得","slug":"心得","count":1,"path":"api/tags/心得.json"}],"author":{"name":"Bugbyebyebye","slug":"blog-author","avatar":"https://cdn.emotionalbug.top/source/kyrie.png","link":"/","description":"计算机大学牲的个人博客","socials":{"github":"https://github.com/Bugbyebyebye","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"https://www.zhihu.com/people/la-ta-san-ren-39","csdn":"","juejin":"https://juejin.cn/user/2247837136721502","customs":{}}},"feature":true}}