[{"id":"08fe6dcb3b19efde37838e9e91d28139","title":"通过IDEA使用Docker快速部署Springboot项目","content":"如何在IDEA远程连接DockerIdea作为一个强大的代码开发工具，提供了便捷的docker服务，如果是社区版你可能需要下载名为docker的插件。如果是专业版则可以直接配置。但是为了在idea实现远程连接服务器的docker，你需要按照如图的配置：然后，选择新建服务器。重点来了，如果你去百度文章，很多教程都会让你去服务器上修改docker配置文件，允许0.0.0.0远程连接到docker，并且开放服务器安全组的2375端口。如果你这么做了，恭喜你，相信不久之后，你就会发现经常冒出莫名其妙的镜像，你的服务器被木马用来挖矿了。写这些教程的人真是心大。其实我们完全可以通过ssh的方式去连接，不需要改写配置文件，也不用暴露端口，安全性大大的提高。如图：测试连接成功之后，我们就迈出了部署项目的第一步。\n在Windows安装Docker传统的使用docker部署项目的方式，就是将项目文件全部拷贝到服务器上，在服务器上的终端中利用docker打包镜像，运行容器。费时费力，每一次程序有修改就要进行一遍这些操作，实在是繁琐。如果我告诉你可以在本地实现一键打包上传部署呢？我们需要安装docker，到docker官网https://www.docker.com/products/docker-desktop/安装docker windows desktop版本。安装好之后，我们需要对idea进行一个配置，如下图：点击右侧的三个点去找到你安装docker的文件夹，默认安装的应该和我的一样。这样就可以在本地进行镜像的打包和部署了，镜像打包完成之后，会自动上传到服务器上，运行容器。\n为Springboot项目配置docker编写dockerfile文件springboot项目打包完成后会生成一个jar包，这个jar包默认放在target下。我们需要为这个项目打包一个镜像，首先选择基础镜像，可以用更完善的ubuntu、centos等，或者直接像我这样使用简单的只包含Java jdk环境的基础镜像，然后将jar包拷贝进去，再进行一些基础配置：\n123FROM adoptopenjdk/openjdk8 #使用基础镜像COPY target/pets-server-1.0.0.jar app.jar #将jar包拷贝放进镜像中CMD [&quot;java&quot;, &quot;-jar&quot;, &quot;app.jar&quot;] # 配置容器启动后的运行指令\n其实，如果你已经有了现成的mysql等数据库，只需要点击部署上传Java项目的镜像即可。但是相信很多开发经验比较丰富的小伙伴都知道，自己配置mysql的服务实在是太繁琐了，尤其是还要修改配置文件，配置远程连接等。于是，我们可以使用docker compose 来连带打包一个mysql镜像，为springboot项目提供数据库服务。\n编写docker compose文件这里我简单给出docker-compose.yml文件的配置，至于为什么要这么配置还需要小伙伴自行学习docker的相关知识。\n123456789101112131415161718192021222324252627282930version: &quot;3.9&quot;services:  spring:    container_name: pets #容器名称    image: pets-server:1.0 #配置先前创建的镜像    ports:      - &quot;8080:8080&quot; #端口映射，保证外界能够访问到web服务    depends_on: #声明本服务的外界服务依赖      - mysql     restart: always #如果MySQL连接不上，不断重启  mysql:    container_name: mysql-server    image: mysql:8.0    command: # 简单配置 MySQL的密码模式、允许远程连接      --default-authentication-plugin=mysql_native_password      --bind-address=0.0.0.0    environment: #使用环境变量：声明用户名密码等      MYSQL_ROOT_HOST: &#x27;%&#x27;      MYSQL_ROOT_PASSWORD: &#x27;password&#x27;      MYSQL_DATABASE: &#x27;pets&#x27; # 声明创建需要的数据库      TZ: &#x27;Asia/Shanghai&#x27;    ports:      - &quot;3306:3306&quot; #端口映射    volumes: # 数据持久化      - db-data:/var/lib/mysqlvolumes: #声明持久化数据卷  db-data:\n\n部署项目在编写好docker配置文件之后，我们终于可以打包镜像，部署项目了。\n\n1.运行dockerfile打包上传Java项目镜像\n2.运行docker-compose打包部署MySQL镜像，并且声明实现所有配置。结果展示：项目成功部署！相信小伙伴们也发现了，idea的这个插件提供了可视化界面，可以实时查看docker运行的控制台输出，检测后端运行状况变得很轻松，不需要下载额外的管理镜像，实在是方便的很呐，那么这篇博客到这里就结束啦。\n\n","slug":"通过IDEA使用Docker快速部署Springboot项目","date":"2024-04-01T10:59:00.000Z","categories_index":"运维","tags_index":"Docker,Springboot","author_index":"Bugbyebyebye"},{"id":"ded7c81b71f424179f608cc88c877ea6","title":"写在开始","content":"为什么想建立博客事实上，跟我的同学相比，我的个人博客建立的实在是很晚了，现在我已经上大三了，在本科三年的学习过程中，我遇到了许许多多的问题，有一些是专业知识的问题，还有许多在自己尝试开发项目的过程中碰到的问题。这些问题并没有得到很好的记录，只有在大二时开始正式使用语雀作为记录，之后碰到的问题才得以保留下来。\n为什么不早早建立一个博客呢，刚开始上大学的时候，对计算机的一切都不是很了解。对于一个来自山东小县城的孩子来说，计算机的知识仅仅停留在一些，类似重装系统啊、下载盗版单机游戏啊之类的。而且刚开始上大学我对计算机软件开发并没有一个清晰的认识，一切都是陌生的。\n好在，现在有了Github page这个平台，免费的前端托管。让我觉得可以不用付出太多时间和精力就可以维护好博客，虽然它只是一个静态的博客网站。但是我觉得用来记录已经足够了。\n建站过程虽然在大学三年里，接触到了不少开发技术。有幸在老师的提携下，加入学校的数字化办公室，学习了许多的开发技巧和一些产品架构的思想，老师的指点使得我的进步很快。也有使用过前端的Vue啦，uniapp这些，但是感觉最感兴趣的还是后端方向，虽然了解了很多，但是学习的并不是非常的深刻，单拎出来每一个可能都还达不到实际企业开发的需求。或许我需要参加实习，将所了解到的知识同实际生产相结合，才会得到更进一步的发展。\n不想在博客的代码上花很多时间，于是借助于傻瓜式的Hexo的帮助，建立这个博客。\n博客主要的技术支持来自Hexo，这帮助我几乎不费吹灰之力就建立起了网站，博客的主题来自 Hexo Auraro：https://aurora.tridiamond.tech/cn/ 非常感谢大佬的开源主题。\n博客内容从今天起我也拥有了自己的个人博客，因为面临着考研，不会进行太多的项目开发。可能会时常更新一些心得体会。\n后边开始会多多的在博客分享自己碰到的解决的一系列问题，向往着成为一个开源项目贡献者，希望后面也能创造出有价值的开源项目。\n","slug":"写在开始","date":"2024-03-27T05:11:15.000Z","categories_index":"个人记录","tags_index":"心得","author_index":"Bugbyebyebye"},{"id":"8595d18b5b2b54b8492df8a97645dee3","title":"这是一篇测试博客","content":"这是测试文字插入图片\n开发即可登录肌肤抵抗力附近的离开家离开集散地立刻反击灯笼裤飞机迪斯科浪费大家角度上考虑飞机迪斯科浪费\n插入网址blog\n插入代码\n1System.out.printf(&quot;Hello world!&quot;);\n\n引用文章\nEvery interaction is both precious and an opportunity to delight.\nSeth GodinWelcome to Island Marketing\n\n","slug":"first","date":"2024-03-26T05:29:58.000Z","categories_index":"测试","tags_index":"Tag","author_index":"Bugbyebyebye"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post1$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server1$ hexo server\n\nMore info: Server\nGenerate static files1$ hexo generate\n\nMore info: Generating\nDeploy to remote sites1$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2024-03-26T04:00:00.000Z","categories_index":"测试","tags_index":"Tag","author_index":"Bugbyebyebye"}]